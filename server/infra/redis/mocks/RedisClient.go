// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// RedisClient is an autogenerated mock type for the RedisClient type
type RedisClient struct {
	mock.Mock
}

// Find provides a mock function with given fields: id, body
func (_m *RedisClient) Find(id string, body interface{}) error {
	ret := _m.Called(id, body)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(id, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Store provides a mock function with given fields: id, body, expiration
func (_m *RedisClient) Store(id string, body interface{}, expiration int) error {
	ret := _m.Called(id, body, expiration)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}, int) error); ok {
		r0 = rf(id, body, expiration)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRedisClient creates a new instance of RedisClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRedisClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *RedisClient {
	mock := &RedisClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
