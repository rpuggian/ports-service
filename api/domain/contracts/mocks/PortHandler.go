// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// PortHandler is an autogenerated mock type for the PortHandler type
type PortHandler struct {
	mock.Mock
}

// GetFileByID provides a mock function with given fields: response, request
func (_m *PortHandler) GetFileByID(response http.ResponseWriter, request *http.Request) {
	_m.Called(response, request)
}

// UploadPortFileHandler provides a mock function with given fields: response, request
func (_m *PortHandler) UploadPortFileHandler(response http.ResponseWriter, request *http.Request) {
	_m.Called(response, request)
}

// NewPortHandler creates a new instance of PortHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPortHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *PortHandler {
	mock := &PortHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
